package coverage

import (
	"os"
	"testing"
	"time"
	"github.com/stretchr/testify/assert"
)

// DO NOT EDIT THIS FUNCTION
func init() {
	content, err := os.ReadFile("students_test.go")
	if err != nil {
		panic(err)
	}
	err = os.WriteFile("autocode/students_test", content, 0644)
	if err != nil {
		panic(err)
	}
}

// WRITE YOUR CODE BELOW

func TestLen(t *testing.T) {
	people := People{{"Peter", "Petrosyan", time.Now()}, {"Hovo", "Hovoyan", time.Now()}}
	got := people.Len()
	want := 2

	if got != want {
		t.Errorf("got %d want %d", got, want)
	}
}

func TestSort (t *testing.T) {
	time1 := time.Date(2021, 8, 15, 14, 30, 45, 100, time.Local)
	time2 := time.Date(2020, 8, 15, 14, 30, 45, 100, time.Local)

	people  := People{{"Hovo", "Hovoyan", time2}, {"Hovo", "Hovoyan", time1}}
	people1 := People{{"Peter", "Petrosyan", time2}, {"Hovo", "Hovoyan", time2}}
	people3 := People{{"Peter", "Petrosyan", time2}, {"Peter", "Hovoyan", time2}}

	got := people.Less(0,1)
	want := false

	got2 := people1.Less(0,1)
	want2 := false

	got3 := people3.Less(0,1)
	want3 := false
	

	if got != want {
		t.Errorf("got %t want %t", got, want)
	}else if got2 != want2 {
		t.Errorf("got %t want %t", got2, want2)
	}else if got3 != want3 {
		t.Errorf("got %t want %t", got3, want3)
	}
}

func TestSwap (t *testing.T) {
	time1 := time.Date(2021, 8, 15, 14, 30, 45, 100, time.Local)

	people  := People{{"Petros", "Hovoyan", time1}, {"Hovo", "Hovoyan", time1}}
	people.Swap(0,1)
	got := people[0].firstName
	want := "Hovo"

	if  want != got {
		t.Errorf("got %s want %s", got, want)
	}
}

func TestMatrix (t *testing.T) {
	as := assert.New(t)
	s1 := `1 2 3 
		   4 5 3`
	s2 := `1 2 3 
		   4 5`
	s3 := `1 2 3 
		   A 3 4`
	s := []string{s1, s2, s3}

	for _, v := range s {
		m, err := New(v)
		if err != nil{
			as.Error(err)
			as.Nil(m)
		} else{
			as.NoError(err)
			as.NotNil(m)
		}
	}

}